<?php
/**
 * @file
 * hooks and helper functions for bulk photo node.
 */

/**
 * Implements hook_permission().
 */
function bulk_photo_nodes_permission() {
  return array(
    'create bulk photo nodes' => array(
      'title' => t('Create bulk photo nodes'),
    ),
  );
}

/**
 * Implements hook_menu_alter().
 */
function bulk_photo_nodes_menu_alter(&$items) {
  $bpn_var = variable_get('bulk_photo_node_types');
  if (!empty($bpn_var)) {
    foreach ($bpn_var as $node_type => $image_field) {
      $node_type = strtr($node_type, '_', '-');
      $items["node/add/$node_type"]['page callback'] = 'bulk_photo_node_page';
      $items['access arguments'] = array('create bulk photo nodes');
      $items["node/add/$node_type"]['page arguments'] = array(2);
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function bulk_photo_nodes_form_node_type_form_alter(&$form, &$form_state, $form_id) {
  $form['bulk_photo_nodes'] = array(
    '#type' => 'fieldset',
    '#tree' => TRUE,
    '#group' => 'additional_settings',
    '#title' => 'Bulk Photo Node Settings',
  );
  $form['bulk_photo_nodes']['image_field'] = array(
    '#type' => 'select',
    '#title' => 'Choose a field for the image',
    '#default_value' => _get_bpn_image_field($form['#node_type']->type),
    '#options' => _get_image_fields($form['#node_type']->type),
  );
  $form['#submit'][] = 'bulk_photo_nodes_submit';
}

/**
 * Submit callback for bulk_photo_nodes_form_node_type_form_alter.
 */
function bulk_photo_nodes_submit($form, &$form_state) {
  $image_field = $form_state['values']['bulk_photo_nodes']['image_field'];
  $node_type = $form['#node_type']->type;

  if (!empty($image_field)) {
    // If the user has selected a value.
    $bpn_var = variable_get('bulk_photo_node_types');

    if ($image_field == 'none') {
      if (is_array($bpn_var) && array_key_exists($node_type, $bpn_var)) {
        unset($bpn_var[$node_type]);
      }
    }
    else {
      $bpn_var[$node_type] = $image_field;
    }
    variable_set('bulk_photo_node_types', $bpn_var);
    drupal_set_message("Bulk photo node settings saved.");
  }
}

/**
 * Returns a list of image fields for a given content type.
 *
 * @param string $node_type
 *   The name of the content type
 *
 * @return array
 *   An associative array where key = machine name, value = field label
 */
function _get_image_fields($node_type) {
  $image_fields = array(
    'none' => '- None -',
  );

  $fields_info = field_info_instances('node', $node_type);
  foreach ($fields_info as $field_name => $field_value) {
    $field_info = field_info_field($field_name);
    $type = $field_info['type'];
    if ($type == 'image') {
      $image_fields[$field_name] = $field_value['label'];
    }
  }
  return $image_fields;
}

/**
 * Indicates if a given content type is being used as bulk photo nodes.
 *
 * @param string $node_type
 *   The machine name of a content_type.
 *
 * @return string
 *   The machine name of the image field or FALSE if the content type isn't used
 */
function _get_bpn_image_field($node_type) {
  $bpn_var = variable_get('bulk_photo_node_types');
  if (is_array($bpn_var)) {
    return (array_key_exists($node_type, $bpn_var)) ? $bpn_var[$node_type] : 'none';
  }
}

/**
 * Page callback: Displays the first step of the bulk photo node upload form.
 *
 * In case the user would like to see the normal node/add form, simply supply
 * a query string of ?override=1
 *
 * @param string $node_type
 *   The content type of the node, used in case of an override.
 *
 * @return array
 *   A render array for the page.
 *
 * @see bulk_photo_nodes_menu_alter()
 */
function bulk_photo_node_page($node_type) {
  $query = drupal_get_query_parameters();
  if (is_array($query) && !array_key_exists('override', $query)) {
    $content = array();
    $forms = module_invoke_all('bpn_upload');
    foreach ($forms as $form) {
      $content[] = drupal_get_form($form);
    }
    return $content;
  }
  else {
    $form = node_add($node_type);
    return $form;
  }
}
